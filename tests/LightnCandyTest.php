<?php
/**
 * Generated by build/gen_test
 */
use LightnCandy\LightnCandy;
use LightnCandy\Runtime;

class LightnCandyTest extends PHPUnit_Framework_TestCase
{
    /**
     * @covers LightnCandy\LightnCandy::stripExtendedComments
     */
    public function testOn_stripExtendedComments() {
        $method = new \ReflectionMethod('LightnCandy\LightnCandy', 'stripExtendedComments');
        $method->setAccessible(true);
        $this->assertEquals('abc', $method->invokeArgs(null,array(
            'abc'
)        ));
        $this->assertEquals('abc{{!}}cde', $method->invokeArgs(null,array(
            'abc{{!}}cde'
)        ));
        $this->assertEquals('abc{{! }}cde', $method->invokeArgs(null,array(
            'abc{{!----}}cde'
)        ));
    }
    /**
     * @covers LightnCandy\LightnCandy::escapeTemplate
     */
    public function testOn_escapeTemplate() {
        $method = new \ReflectionMethod('LightnCandy\LightnCandy', 'escapeTemplate');
        $method->setAccessible(true);
        $this->assertEquals('abc', $method->invokeArgs(null,array(
            'abc'
)        ));
        $this->assertEquals('a\\\\bc', $method->invokeArgs(null,array(
            'a\bc'
)        ));
        $this->assertEquals('a\\\'bc', $method->invokeArgs(null,array(
            'a\'bc'
)        ));
    }
    /**
     * @covers LightnCandy\LightnCandy::handleError
     */
    public function testOn_handleError() {
        $method = new \ReflectionMethod('LightnCandy\LightnCandy', 'handleError');
        $method->setAccessible(true);
        $this->assertEquals(true, $method->invokeArgs(null,array(
            array('level' => 1, 'stack' => array('X'), 'flags' => array('errorlog' => 0, 'exception' => 0), 'error' => array(), 'rawblock' => 0)
)        ));
        $this->assertEquals(false, $method->invokeArgs(null,array(
            array('level' => 0, 'error' => array())
)        ));
        $this->assertEquals(true, $method->invokeArgs(null,array(
            array('level' => 0, 'error' => array('some error'), 'flags' => array('errorlog' => 0, 'exception' => 0))
)        ));
    }
}
?>