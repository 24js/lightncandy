<?php

require_once 'PHPUnit/Autoload.php';
include('src/lightncandy.inc');

$datetime = date('Y-m-d H:i:s');

ob_start();

echo <<<VAR
<?php
/**
 * Generated by build/gen_test on 2014-02-26 at 05:34:15.
 */
include('src/lightncandy.inc');
VAR
;

genTestForClass('LightnCandy');
genTestForClass('LCRun');
echo "\n?>";

$fn = 'tests/LightnCandyTest.php';
if (!file_put_contents($fn, ob_get_clean())) {
    die("Can not generate tests into file $fn !!\n");
}

function genTestForClass($classname) {
    echo <<<VAR

class {$classname}Test extends PHPUnit_Framework_TestCase
{

VAR
    ;

    $class = new ReflectionClass($classname);
    foreach ($class->getMethods() as $method) {
        if (preg_match_all('/@expect (.+) when input (.+)/', $method->getDocComment(), $matched)) {
            echo <<<VAR
    /**
     * @covers {$classname}::{$method->name}
     */
    public function testOn_{$method->name}() {
        \$method = new ReflectionMethod('$classname', '{$method->name}');

VAR
            ;
            if ($method->isPrivate() || $method->isProtected()) {
                echo "        \$method->setAccessible(true);\n";
            }
            foreach ($matched[1] as $idx => $expect) {
                echo "        \$this->assertEquals($expect, \$method->invoke(null, {$matched[2][$idx]}));\n";
            }
            echo "    }\n";
        }
    }
    echo "}\n";
}
?>
